{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Andrei.Miclea/Desktop/photo/my-photo-app/src/ImagePreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  previewContainer: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  previewListItem: {\n    listStyle: \"none\",\n    margin: \"10px\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    // Add cursor pointer to indicate it's clickable\n    transition: \"transform 0.3s ease\" // Add a transition for smooth animation\n  },\n\n  previewItemLarge: {\n    //Styles the larger preview when an image is selected\n    maxWidth: \"500px\",\n    // You can adjust the width and height as needed\n    maxHeight: \"400px\",\n    borderRadius: \"7px\",\n    boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\",\n    transform: \"scale(2.2)\" // Increase the size of the selected image\n  }\n};\n\nconst ImagePreview = ({\n  selectedFiles\n}) => {\n  _s();\n  const [selectedImageIndex, setSelectedImageIndex] = useState(-1); // State to track the index of the selected image\n\n  const handleImageClick = index => {\n    setSelectedImageIndex(index); // Update the selectedImageIndex state when an image is clicked\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"previewContainer\",\n      style: styles.previewContainer,\n      children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          ...styles.previewListItem,\n          ...(index === selectedImageIndex && styles.previewItemLarge) // Apply larger size to the selected image\n        },\n\n        onClick: () => handleImageClick(index) // Handle click on the image to make it larger\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(file),\n          alt: file.name,\n          style: {\n            maxWidth: \"150px\",\n            // Adjust the max width of the images (not applied to the selected image)\n            borderRadius: \"5px\",\n            boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ImagePreview, \"P9UpVYCXKGv8cWBesoRmAr0iweo=\");\n_c = ImagePreview;\nexport default ImagePreview;\nvar _c;\n$RefreshReg$(_c, \"ImagePreview\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","styles","previewContainer","marginTop","display","flexWrap","justifyContent","previewListItem","listStyle","margin","textAlign","cursor","transition","previewItemLarge","maxWidth","maxHeight","borderRadius","boxShadow","transform","ImagePreview","selectedFiles","_s","selectedImageIndex","setSelectedImageIndex","handleImageClick","index","children","id","style","map","file","onClick","src","URL","createObjectURL","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/c/Users/Andrei.Miclea/Desktop/photo/my-photo-app/src/ImagePreview.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst styles = {\r\n    previewContainer: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n      },\r\n      previewListItem: {\r\n        listStyle: \"none\",\r\n        margin: \"10px\",\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\", // Add cursor pointer to indicate it's clickable\r\n        transition: \"transform 0.3s ease\", // Add a transition for smooth animation\r\n      },\r\n      previewItemLarge: { //Styles the larger preview when an image is selected\r\n        maxWidth: \"500px\", // You can adjust the width and height as needed\r\n        maxHeight: \"400px\",\r\n        borderRadius: \"7px\",\r\n        boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\",\r\n        transform: \"scale(2.2)\", // Increase the size of the selected image\r\n      },\r\n};\r\n\r\nconst ImagePreview = ({ selectedFiles }) => {\r\n  const [selectedImageIndex, setSelectedImageIndex] = useState(-1); // State to track the index of the selected image\r\n\r\n  const handleImageClick = (index) => {\r\n    setSelectedImageIndex(index); // Update the selectedImageIndex state when an image is clicked\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul id=\"previewContainer\" style={styles.previewContainer}>\r\n        {/* Render the images in horizontal list */}\r\n        {selectedFiles.map((file, index) => (\r\n          <li\r\n            key={index}\r\n            style={{\r\n              ...styles.previewListItem,\r\n              ...(index === selectedImageIndex && styles.previewItemLarge), // Apply larger size to the selected image\r\n            }}\r\n            onClick={() => handleImageClick(index)} // Handle click on the image to make it larger\r\n          >\r\n            <img\r\n              src={URL.createObjectURL(file)}\r\n              alt={file.name}\r\n              style={{\r\n                maxWidth: \"150px\", // Adjust the max width of the images (not applied to the selected image)\r\n                borderRadius: \"5px\",\r\n                boxShadow: \"0 2px 5px rgba(0, 0, 0, 0.2)\",\r\n              }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImagePreview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAG;EACXC,gBAAgB,EAAE;IACdC,SAAS,EAAE,MAAM;IACjBC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,MAAM;IAChBC,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE;IACfC,SAAS,EAAE,MAAM;IACjBC,MAAM,EAAE,MAAM;IACdC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,SAAS;IAAE;IACnBC,UAAU,EAAE,qBAAqB,CAAE;EACrC,CAAC;;EACDC,gBAAgB,EAAE;IAAE;IAClBC,QAAQ,EAAE,OAAO;IAAE;IACnBC,SAAS,EAAE,OAAO;IAClBC,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE,8BAA8B;IACzCC,SAAS,EAAE,YAAY,CAAE;EAC3B;AACN,CAAC;;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAElE,MAAM0B,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,qBAAqB,CAACE,KAAK,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED,oBACEzB,OAAA;IAAA0B,QAAA,eACE1B,OAAA;MAAI2B,EAAE,EAAC,kBAAkB;MAACC,KAAK,EAAE3B,MAAM,CAACC,gBAAiB;MAAAwB,QAAA,EAEtDN,aAAa,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEL,KAAK,kBAC7BzB,OAAA;QAEE4B,KAAK,EAAE;UACL,GAAG3B,MAAM,CAACM,eAAe;UACzB,IAAIkB,KAAK,KAAKH,kBAAkB,IAAIrB,MAAM,CAACY,gBAAgB,CAAC,CAAE;QAChE,CAAE;;QACFkB,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACC,KAAK,CAAE,CAAC;QAAA;QAAAC,QAAA,eAExC1B,OAAA;UACEgC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAE;UAC/BK,GAAG,EAAEL,IAAI,CAACM,IAAK;UACfR,KAAK,EAAE;YACLd,QAAQ,EAAE,OAAO;YAAE;YACnBE,YAAY,EAAE,KAAK;YACnBC,SAAS,EAAE;UACb;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAfGf,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlCIF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}